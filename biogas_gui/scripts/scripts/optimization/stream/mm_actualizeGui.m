%% mm_actualizeGui
% 
%
%% Toolbox
% |mm_actualizeGui| belongs to the _Biogas Plant Modeling_ Toolbox
% and is an internal function.
%
%% Release
% Approval for Release 1.0, to get the approval for Release 1.1 make a
% thorough review, Daniel Gaida 
%
%% Syntax
%       handles= mm_actualizeGui(handles)
%
%% Description
% |handles= mm_actualizeGui(handles)|. Belongs to <set_input_stream_min_max.html
% set_input_stream_min_max>. 
%
%%
% @param |handles| : handle of gui
%
%%
% @return |handles| : handle of gui
%
%% Example
%
% 
%% Dependencies
% 
% This function calls:
%
% <html>
% <a href="matlab:doc('loadplantstructure')">
% loadPlantStructure</a>
% </html>
% ,
% <html>
% <a href="mm_setpopPlantToValue.html">
% mm_setpopPlantToValue</a>
% </html>
% ,
% <html>
% <a href="loadPlantNetworkBoundsFromFile.html">
% loadPlantNetworkBoundsFromFile</a>
% </html>
% ,
% <html>
% <a href="loadSubstrateNetworkBoundsFromFile.html">
% loadSubstrateNetworkBoundsFromFile</a>
% </html>
%
% and is called by:
%
% <html>
% <a href="mm_callActualizeGUI.html">
% mm_callActualizeGUI</a>
% </html>
% 
%% See Also
%
% <html>
% <a href="set_input_stream_min_max.html">
% set_input_stream_min_max</a>
% </html>
% ,
% <html>
% <a href="stream\set_input_stream.html">
% set_input_stream</a>
% </html>
%
%% TODOs
%
%
%% Author
% Daniel Gaida, M.Sc.EE.IT
%
% Cologne University of Applied Sciences (Campus Gummersbach)
%
% Department of Automation & Industrial IT
%
% GECO-C Group
%
% daniel.gaida@fh-koeln.de
%
% Copyright 2010-2011
%
% Last Update: 17.10.2011
%
%% Function
%
function handles= mm_actualizeGui(handles)

% [path_config_mat]= fileparts(which('plant_plantname.mat'));
% 
% s= what(path_config_mat);
% 
% mat_files= s.mat;
% 
% for ifile= 1:size(mat_files,1)
%     
%     s= whos('-file', char(mat_files(ifile,1)));
%     
%     if strcmp( s.name, 'plant' )
%        load ( char(mat_files(ifile,1)) );
%        
%        if strcmp(plant.name, handles.plantName) || ...
%           strcmp(plant.id, handles.plantID)
%            handles.plant= plant;
%            
%            if isempty(handles.plantName)
%            
%                handles= setpopPlantToValue(handles, plant.name);
%                
%            end
%            
%            handles.plantID= plant.id;
%            handles.plantName= plant.name;
%                       
%            % Update handles structure
%            %guidata(hObject, handles);
%            
%            clear s;
%            
%            break;
%        else
%            clear plant;
%        end
%        
%     end
%     
%     clear s;
%     
% end

%%

error( nargchk(1, 1, nargin, 'struct') );
error( nargoutchk(1, 1, nargout, 'struct') );

%%

if ~isstruct(handles)
  error(['The 1st parameter handles must be of type struct, ', ...
         'but is of type ', class(handles), '!']);
end

%%

if isempty(handles.plantName)
    plant_id_or_name= handles.plantID;
else
    plant_id_or_name= handles.plantName;
end

%%

[handles.plant, path_config_mat]= loadPlantStructure(plant_id_or_name);

%%

if ~isempty(handles.plant)
    
    if isempty(handles.plantName)
        
        handles= mm_setpopPlantToValue(handles, char(handles.plant.name));
        
    end
    
    handles.plantID= char(handles.plant.id);
    handles.plantName= char(handles.plant.name);
           
end


%%

posPanels= get(handles.panSubstrate, 'Position');
topPanels= posPanels(1,4) - 1.8 - 1.615/2.0 - 0.6;

posPanelsFlux= get(handles.panPumpFlux, 'Position');
topPanelsFlux= posPanelsFlux(1,4) - 1.8 - 1.615/2.0 - 0.65;

%%

if ~isempty(handles.plant)
    
    substrate_file= fullfile( ...
            path_config_mat, ['substrate_', char(handles.plant.id), '.xml' ] ...
                      );
    
    if exist( substrate_file, 'file' )
        
        substrate= biogas.substrates(substrate_file);
                
        %for ipop= 1:3
        %    set(handles.(sprintf('popSubstrateFlow%i', ipop)), ...
        %        'String', '--- Bitte Substrat wählen ---');
        %end
        
        handles.substrate= substrate;
        
        n_substrates= handles.substrate.getNumSubstratesD();
        n_fermenter= handles.plant.getNumDigestersD();
        
        handles.substrateflow= zeros(n_substrates,1);
        handles.lblSubstrateFlow= zeros(n_substrates,1);
        
        size_substrate_fermenter= n_substrates * n_fermenter;
        
        %handles.txtSubstrateFlow= zeros(size_substrate_fermenter,1);
        handles.txtSubstrateFlowMin= zeros(size_substrate_fermenter,1);
        handles.txtSubstrateFlowMax= zeros(size_substrate_fermenter,1);
        
        handles.lblSubstrateFlowMin= zeros(n_fermenter,1);
        handles.lblSubstrateFlowMax= zeros(n_fermenter,1);
        
        handles.lblSubstrateFlowUnit= zeros(n_substrates,1);
        %handles.chkSubstrateOptim= zeros(size(handles.substrate.ids,2),1);
        
        handles.panFermenter= zeros(n_fermenter,1);
        handles.radPanFermenter= zeros(n_fermenter,1);
        
        %%
        handles= loadPlantNetworkBoundsFromFile(handles, ...
                    path_config_mat, handles.model_path);
        
        %%
        handles= loadSubstrateNetworkBoundsFromFile(handles, ...
                    path_config_mat, handles.model_path);
        
        %%
        %handles= loadDataFromFile(handles, size(handles.substrate.ids,2));
        
        %n_substrates= size(handles.substrate.ids,2);
        
        %n_fermenter= size(handles.plant.fermenter.ids,2);
        
        %%
        
        if isempty(handles.substrate_network_min)
            handles.substrate_network_min= zeros(n_substrates, n_fermenter);
        end
        if isempty(handles.substrate_network_max)
            handles.substrate_network_max= zeros(n_substrates, n_fermenter);
        end
        if isempty(handles.plant_network_min)
            handles.plant_network_min= zeros(n_fermenter, n_fermenter + 1);
        end
        if isempty(handles.plant_network_max)
            handles.plant_network_max= zeros(n_fermenter, n_fermenter + 1);
        end
        
        %%
        
        if any(size(handles.substrate_network_min) < [n_substrates, n_fermenter])
          handles.substrate_network_min= ...
            extend_network2NumDimensions(handles.substrate_network_min, ...
                                         n_substrates, n_fermenter);
        end
        
        if any(size(handles.substrate_network_max) < [n_substrates, n_fermenter])
          handles.substrate_network_max= ...
            extend_network2NumDimensions(handles.substrate_network_max, ...
                                         n_substrates, n_fermenter);
        end
        
        if any(size(handles.plant_network_min) < [n_fermenter, n_fermenter + 1])
          handles.plant_network_min= ...
            extend_network2NumDimensions(handles.plant_network_min, ...
                                         n_fermenter, n_fermenter + 1);
        end
        
        if any(size(handles.plant_network_max) < [n_fermenter, n_fermenter + 1])
          handles.plant_network_max= ...
            extend_network2NumDimensions(handles.plant_network_max, ...
                                         n_fermenter, n_fermenter + 1);
        end
        
        %%
        
        for isubstrate= 1:n_substrates
                       
            substrateName= char(substrate.getName(isubstrate));
            
            handles.lblSubstrateFlow(isubstrate,1)= ...
                uicontrol('Style', 'text', 'Units', 'characters', ...
                          'Position', [1.8 topPanels - ...
                          (isubstrate-1)*2 - 1.615 43.1 1.615],...
                          'String', substrateName, ...
                          'Parent', handles.panSubstrate, ...
                          'HorizontalAlignment', 'left');
            
            for ifermenter= 1:n_fermenter          
                
                fermenterName= char(handles.plant.getDigesterName(ifermenter));
                          
                if isubstrate == 1
                    
                    handles.panFermenter(ifermenter,1)= ...
                      uipanel('Units', 'characters', ...
                              'Position', ...
                              [45.2 posPanels(1,4) - posPanelsFlux(1,4) ...
                               29.75 posPanelsFlux(1,4)],...
                              'Title', fermenterName, ...
                              'Parent', handles.panSubstrate);%, ...
                              %'HorizontalAlignment', 'center', ...
                              %'ToolTipString', ...
                              %sprintf(['Geben Sie eine positive Zahl für ', ...
                              %'die minimale Substratmenge von %s an!'], ...
                              %substrateName));  
                
                    handles.radPanFermenter(ifermenter,1)= ...
                      uicontrol('Style', 'radiobutton', ...
                              'Units', 'characters', ...
                              'Position', [1.0 + (ifermenter - 1)*25.0 ...
                                           0.5 24.25 1.769],...
                              'String', fermenterName, ...
                              'Parent', handles.radpanelFermenter, ...
                              'HorizontalAlignment', 'center', ...
                              'ToolTipString', ...
                              sprintf('Wählen Sie den Fermenter %s aus!', ...
                              fermenterName), ...
                              'Tag', sprintf('%i', ifermenter));                
                
                    handles.lblSubstrateFlowMin(ifermenter,1)= ...
                    uicontrol('Style', 'text', 'Units', 'characters', ...
                              'Position', [0.5 topPanelsFlux ...
                              11.75 1.615],...
                              'String', 'min', ...
                              'Parent', handles.panFermenter(ifermenter,1), ...
                              'HorizontalAlignment', 'center');              

                    handles.lblSubstrateFlowMax(ifermenter,1)= ...
                    uicontrol('Style', 'text', 'Units', 'characters', ...
                              'Position', [12.75 topPanelsFlux ...
                              11.75 1.615],...
                              'String', ...
                              'max', ...
                              'Parent', handles.panFermenter(ifermenter,1), ...
                              'HorizontalAlignment', 'center');   
                          
                if ifermenter == 1
                
                    set(handles.panFermenter(ifermenter,1), 'Visible', 'on');
                    set(handles.radPanFermenter(ifermenter,1), 'Value', 1.0);
                    
                else
                    
                    set(handles.panFermenter(ifermenter,1), 'Visible', 'off');
                    
                end
                
                end
                              
%                 handles.txtSubstrateFlow(isubstrate + ...
%                                         (ifermenter - 1)*n_substrates,1)= ...
%                 uicontrol('Style', 'edit', 'Units', 'characters', ...
%                           'Position', [0.5 topPanels - ...
%                           (isubstrate-1)*2 12.2 1.615],...
%                           'String', handles.substrateflow(isubstrate,1), ...
%                           'BackgroundColor', 'white', ...
%                           'Parent', handles.panFermenter(ifermenter,1), ...
%                           'HorizontalAlignment', 'center', ...
%                           'ToolTipString', ...
%                           sprintf(['Geben Sie eine positive Zahl für ', ...
%                           'die Substratmenge von %s an!'], ...
%                           substrateName));%, ...
                          %'KeyPressFcn', {@saveSubstrateFlow, handles, isubstrate});%, ...
                          %'Callback', {@saveSubstrateFlow, handles, isubstrate});
                      
                handles.txtSubstrateFlowMin(isubstrate + ...
                                    (ifermenter - 1)*n_substrates,1)= ...
                    uicontrol('Style', 'edit', 'Units', 'characters', ...
                              'Position', [0.5 topPanelsFlux - ...
                              (isubstrate-1)*2 - 1.615 11.75 1.615],...
                              'String', ...
                              handles.substrate_network_min(isubstrate,ifermenter), ...
                              'BackgroundColor', 'white', ...
                              'Parent', handles.panFermenter(ifermenter,1), ...
                              'HorizontalAlignment', 'center', ...
                              'ToolTipString', ...
                              sprintf(['Geben Sie eine positive Zahl für ', ...
                              'die minimale Substratmenge von %s ', ...
                              'für Fermenter %s an!'], ...
                              substrateName, fermenterName));              

                handles.txtSubstrateFlowMax(isubstrate + ...
                                    (ifermenter - 1)*n_substrates,1)= ...
                    uicontrol('Style', 'edit', 'Units', 'characters', ...
                              'Position', [12.75 topPanelsFlux - ...
                              (isubstrate-1)*2 - 1.615 11.75 1.615],...
                              'String', ...
                              handles.substrate_network_max(isubstrate,ifermenter), ...
                              'BackgroundColor', 'white', ...
                              'Parent', handles.panFermenter(ifermenter,1), ...
                              'HorizontalAlignment', 'center', ...
                              'ToolTipString', ...
                              sprintf(['Geben Sie eine positive Zahl für ', ...
                              'die maximale Substratmenge von %s ', ...
                              'für Fermenter %s an!'], ...
                              substrateName, fermenterName));              
                      
            end
                      
            handles.lblSubstrateFlowUnit(isubstrate,1)= ...
                uicontrol('Style', 'text', 'Units', 'characters', ...
                          'Position', [76.6 topPanels - ...
                          (isubstrate-1)*2 - 1.615 8.2 1.615],...
                          ...'String', '<html>[m<sup>3</sup>/d]<html>');
                          'String', '[m³/d]', ...
                          'Parent', handles.panSubstrate, ...
                          'HorizontalAlignment', 'center');
                      
%             handles.chkSubstrateOptim(isubstrate,1)= ...
%                 uicontrol('Style', 'checkbox', 'Units', 'characters', ...
%                           'Position', [73.5 topPanels - ...
%                           (isubstrate-1)*2 13.2 1.615],...
%                           ...'String', '<html>[m<sup>3</sup>/d]<html>');
%                           'String', 'Optimiere', ...
%                           'Parent', handles.panSubstrate, ...
%                           'HorizontalAlignment', 'center');
                      
%             for ipop= 1:3
%                 contents= ...
%                     get(handles.(sprintf('popSubstrateFlow%i', ipop)), 'String');
%    
%                 set(handles.(sprintf('popSubstrateFlow%i', ipop)), ...
%                     'String', {char(contents); substrateName});
%             end
            
        end
        
    end
    
    
    %%
    
    plant_network_file= fullfile( ...
            path_config_mat, ['plant_network_', char(handles.plant.id), '.mat' ] ...
                      );
    
    if exist( plant_network_file, 'file' )
        
        load(plant_network_file);
        
        handles.plant_network= plant_network;
        
        total_number_fluxes= 0;
        
        for irow= 1:size(plant_network, 1)
           
            if sum(handles.plant_network(irow, :) > 0) > 1
               
                total_number_fluxes= total_number_fluxes + ...
                            sum(handles.plant_network(irow, 1:end-1) > 0);
                
            end
            
        end
        
        %size_plant_flux_fermenter= total_number_fluxes * ...
         %                         size(handles.plant.fermenter.ids,2);
        
        handles.pumpFlux= zeros(total_number_fluxes, 1);
        handles.lblPumpFlux= zeros(total_number_fluxes, 1);
        
        %handles.txtPumpFlux= zeros(total_number_fluxes, 1);
        
        handles.txtPumpFluxMin= zeros(total_number_fluxes, 1);
        handles.txtPumpFluxMax= zeros(total_number_fluxes, 1);
        
        handles.lblPumpFluxUnit= zeros(total_number_fluxes, 1);
        handles.chkPumpFluxOptim= zeros(total_number_fluxes, 1);
        
        %handles= loadPumpFluxDataFromFile(handles, total_number_fluxes);
        
        handles.lblPumpFluxMin= ...
                    uicontrol('Style', 'text', 'Units', 'characters', ...
                              'Position', [46.15 topPanelsFlux ...
                              + 0.15 11.75 1.615],...
                              'String', 'min', ...
                              'Parent', handles.panPumpFlux, ...
                              'HorizontalAlignment', 'center');              

      	handles.lblPumpFluxMax= ...
                    uicontrol('Style', 'text', 'Units', 'characters', ...
                              'Position', [58.4 topPanelsFlux ...
                              + 0.15 11.75 1.615],...
                              'String', ...
                              'max', ...
                              'Parent', handles.panPumpFlux, ...
                              'HorizontalAlignment', 'center');   
        
        iPumpFlux= 0;
        
        for ifermenterOut= 1:size(handles.plant_network,1)
            
            fermenterOutName= char(handles.plant.getDigesterName(ifermenterOut));
            
            for ifermenterIn= 1:size(handles.plant_network,2) - 1
                
                %if ifermenterIn == size(handles.plant_network,2)
                %    fermenterInName= 'Endlager';
                %else
                    fermenterInName= char(handles.plant.getDigesterName(ifermenterIn));
                %end
                
                if handles.plant_network(ifermenterOut, ifermenterIn) > 0 && ...
                   sum(handles.plant_network(ifermenterOut, :) > 0) > 1
                   
                    iPumpFlux= iPumpFlux + 1;
                    
                    fermenterString= ...
                        [fermenterOutName, ' -> ', fermenterInName];
                    
                    handles.lblPumpFlux(iPumpFlux,1)= ...
                uicontrol('Style', 'text', 'Units', 'characters', ...
                          'Position', [1.8 topPanelsFlux - ...
                          (iPumpFlux-1)*2 - 1.615 43.1 1.615],...
                          'String', fermenterString, ...
                          'Parent', handles.panPumpFlux, ...
                          'HorizontalAlignment', 'left');
                     
                      
                      
            %for ifermenter= 1:size(handles.plant.fermenter.ids,2)          
                
                %fermenterName= handles.plant.fermenter.(char(...
                %              handles.plant.fermenter.ids(1,ifermenter)...
                 %             )).name;
                          
                %handles.panFermenterFlux(ifermenter,1)= ...
                %      uipanel('Units', 'characters', ...
                %              'Position', [45.2 0.0 19.75 posPanels(1,4)],...
                %              'Title', fermenterName, ...
                %              'Parent', handles.panPumpFlux);%, ...
                              %'HorizontalAlignment', 'center', ...
                              %'ToolTipString', ...
                              %sprintf(['Geben Sie eine positive Zahl für ', ...
                              %'die minimale Substratmenge von %s an!'], ...
                              %substrateName));  
                      
%             handles.txtPumpFlux(iPumpFlux... %+ ...
%                                ...%(ifermenter - 1)*total_number_fluxes,1
%                                )= ...
%                 uicontrol('Style', 'edit', 'Units', 'characters', ...
%                           'Position', [46.15 topPanelsFlux - ...
%                           (iPumpFlux-1)*2 12.2 1.615],...
%                           'String', handles.pumpFlux(iPumpFlux,1), ...
%                           'BackgroundColor', 'white', ...
%                           'Parent', handles.panPumpFlux, ...
%                           'HorizontalAlignment', 'center', ...
%                           'Tag', ...
%             [char(handles.plant.fermenter.ids(1,ifermenterOut)), '_', ...
%              char(handles.plant.fermenter.ids(1,ifermenterIn))], ...
%                           'ToolTipString', ...
%                           sprintf(['Geben Sie eine positive Zahl für ', ...
%                           'die zu pumpende Menge zwischen %s und %s an!'], ...
%                           fermenterOutName, fermenterInName));
                          
            handles.txtPumpFluxMin(iPumpFlux... %+ ...
                               ...%(ifermenter - 1)*total_number_fluxes,1
                               )= ...
                uicontrol('Style', 'edit', 'Units', 'characters', ...
                          'Position', [46.15 topPanelsFlux - ...
                          (iPumpFlux-1)*2 - 1.615 + 0.15 11.75 1.615],...
                          'String', ...
                          handles.plant_network_min(ifermenterOut,ifermenterIn), ...
                          'BackgroundColor', 'white', ...
                          'Parent', handles.panPumpFlux, ...
                          'HorizontalAlignment', 'center', ...
                          'Tag', ...
                          sprintf('%i', ifermenterOut), ...
                          'ToolTipString', ...
                          sprintf(['Geben Sie eine positive Zahl für ', ...
                          'die minimal zu pumpende Menge zwischen %s und %s an!'], ...
                          fermenterOutName, fermenterInName));
                      
            handles.txtPumpFluxMax(iPumpFlux... % + ...
                               ... %(ifermenter - 1)*total_number_fluxes,1...
                               )= ...
                uicontrol('Style', 'edit', 'Units', 'characters', ...
                          'Position', [58.4 topPanelsFlux - ...
                          (iPumpFlux-1)*2 - 1.615 + 0.15 11.75 1.615],...
                          'String', ...
                          handles.plant_network_max(ifermenterOut,ifermenterIn), ...
                          'BackgroundColor', 'white', ...
                          'Parent', handles.panPumpFlux, ...
                          'HorizontalAlignment', 'center', ...
                          'Tag', ...
                          sprintf('%i', ifermenterIn), ...
                          'ToolTipString', ...
                          sprintf(['Geben Sie eine positive Zahl für ', ...
                          'die maximal zu pumpende Menge zwischen %s und %s an!'], ...
                          fermenterOutName, fermenterInName));          
                      
            %end
            
            
                      
            handles.lblPumpFluxUnit(iPumpFlux,1)= ...
                uicontrol('Style', 'text', 'Units', 'characters', ...
                          'Position', [76.6 topPanelsFlux - ...
                          (iPumpFlux-1)*2 - 1.615 8.2 1.615],...
                          ...'String', '<html>[m<sup>3</sup>/d]<html>');
                          'String', '[m³/d]', ...
                          'Parent', handles.panPumpFlux, ...
                          'HorizontalAlignment', 'center');
                    
%             handles.chkPumpFluxOptim(iPumpFlux,1)= ...
%                 uicontrol('Style', 'checkbox', 'Units', 'characters', ...
%                           'Position', [73.5 topPanelsFlux - ...
%                           (iPumpFlux-1)*2 13.2 1.615],...
%                           ...'String', '<html>[m<sup>3</sup>/d]<html>');
%                           'String', 'Optimiere', ...
%                           'Parent', handles.panPumpFlux, ...
%                           'HorizontalAlignment', 'center');
                      
                end
                
            end
            
        end
        
        
        
    end
    
    
    
else
    error('Could not find the selected plant!');
end

%handles

%%

% Update handles structure
%guidata(hObject, handles);

%%


